Index: pkg/modbus/device/twindata.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\nCopyright 2020 The KubeEdge Authors.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\npackage device\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"strconv\"\r\n\t\"strings\"\r\n\r\n\t\"github.com/kubeedge/mappers-go/pkg/common\"\r\n\t\"github.com/kubeedge/mappers-go/pkg/modbus/driver\"\r\n\t\"github.com/kubeedge/mappers-go/pkg/modbus/globals\"\r\n\t\"k8s.io/klog\"\r\n)\r\n\r\n// TwinData is the timer structure for getting twin/data.\r\ntype TwinData struct {\r\n\tClient             *driver.ModbusClient\r\n\tName               string\r\n\tType               string\r\n\tRegisterType       string\r\n\tAddress            uint16\r\n\tQuantity           uint16\r\n\tResults            []byte\r\n\tTopic              string\r\n\tDeviceModel        string\r\n\tDeviceInstanceName string\r\n}\r\n\r\n// Run timer function.\r\nfunc (td *TwinData) Run() error {\r\n\tvar (\r\n\t\terr error\r\n\t)\r\n\ttd.Results, err = td.Client.Get(td.RegisterType, td.Address, td.Quantity)\r\n\t// 访问失败之后，继续访问，访问10次，如果10次全部失败说明设备或者串口不可用，直接retuen\r\n\tif err != nil {\r\n\t\tfor i := 0; i <= 9; i++ {\r\n\t\t\tif td.Results, err = td.Client.Get(td.RegisterType, td.Address, td.Quantity); err == nil {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tif i == 9 {\r\n\t\t\t\treturn fmt.Errorf(\"IMU设备不可用\")\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\ts1 := strings.Replace(fmt.Sprintf(\"%v\", td.Results), \"[\", \"\", -1)\r\n\ts2 := strings.Replace(s1, \"]\", \"\", -1)\r\n\tsplitS2 := strings.Split(s2, \"\")\r\n\tvar nodeName string\r\n\tif len(strings.Split(td.DeviceInstanceName, \"-\")) == 3 && strings.Split(td.DeviceInstanceName, \"-\")[2] != \"\" {\r\n\t\tnodeName = strings.Split(td.DeviceInstanceName, \"-\")[2]\r\n\t}\r\n\t// acceleration\r\n\tss1 := splitS2[0]\r\n\tss2 := splitS2[1]\r\n\tss3 := splitS2[2]\r\n\tss4 := splitS2[3]\r\n\tss5 := splitS2[4]\r\n\tss6 := splitS2[5]\r\n\taxh, _ := strconv.Atoi(ss1)\r\n\taxl, _ := strconv.Atoi(ss2)\r\n\tayh, _ := strconv.Atoi(ss3)\r\n\tayl, _ := strconv.Atoi(ss4)\r\n\tazh, _ := strconv.Atoi(ss5)\r\n\tazl, _ := strconv.Atoi(ss6)\r\n\tk := 16.0\r\n\taccX := float64(axh<<8|axl) / 32768.0 * k\r\n\taccY := float64(ayh<<8|ayl) / 32768.0 * k\r\n\taccZ := float64(azh<<8|azl) / 32768.0 * k\r\n\tif accX >= k {\r\n\t\taccX -= 2 * k\r\n\t}\r\n\tif accY >= k {\r\n\t\taccY -= 2 * k\r\n\t}\r\n\tif accZ >= k {\r\n\t\taccZ -= 2 * k\r\n\t}\r\n\tklog.V(2).Info(\"---------accX-----------\", accX)\r\n\tklog.V(2).Info(\"---------accY-----------\", accY)\r\n\tklog.V(2).Info(\"---------accZ-----------\", accZ)\r\n\t// angularVelocity\r\n\r\n\tss7 := splitS2[6]\r\n\tss8 := splitS2[7]\r\n\tss9 := splitS2[8]\r\n\tss10 := splitS2[9]\r\n\tss11 := splitS2[10]\r\n\tss12 := splitS2[11]\r\n\twxh, _ := strconv.Atoi(ss7)\r\n\twxl, _ := strconv.Atoi(ss8)\r\n\twyh, _ := strconv.Atoi(ss9)\r\n\twyl, _ := strconv.Atoi(ss10)\r\n\twzh, _ := strconv.Atoi(ss11)\r\n\twzl, _ := strconv.Atoi(ss12)\r\n\tk = 2000.0\r\n\twX := float64(wxh<<8|wxl) / 32768.0 * k\r\n\twY := float64(wyh<<8|wyl) / 32768.0 * k\r\n\twZ := float64(wzh<<8|wzl) / 32768.0 * k\r\n\tif wX >= k {\r\n\t\twX -= 2 * k\r\n\t}\r\n\tif wY >= k {\r\n\t\twY -= 2 * k\r\n\t}\r\n\tif wZ >= k {\r\n\t\twZ -= 2 * k\r\n\t}\r\n\tklog.V(2).Info(\"---------wX-----------\", wX)\r\n\tklog.V(2).Info(\"---------wY-----------\", wY)\r\n\tklog.V(2).Info(\"---------wZ-----------\", wZ)\r\n\t// magnetic\r\n\tss13 := splitS2[12]\r\n\tss14 := splitS2[13]\r\n\tss15 := splitS2[14]\r\n\tss16 := splitS2[15]\r\n\tss17 := splitS2[16]\r\n\tss18 := splitS2[17]\r\n\thxH, _ := strconv.Atoi(ss13)\r\n\thxL, _ := strconv.Atoi(ss14)\r\n\thyH, _ := strconv.Atoi(ss15)\r\n\thyL, _ := strconv.Atoi(ss16)\r\n\thzH, _ := strconv.Atoi(ss17)\r\n\thzL, _ := strconv.Atoi(ss18)\r\n\tk = 1.0\r\n\thX := float64(hxH<<8 | hxL)\r\n\thY := float64(hyH<<8 | hyL)\r\n\thZ := float64(hzH<<8 | hzL)\r\n\tif hX >= k {\r\n\t\thX -= 2 * k\r\n\t}\r\n\tif hY >= k {\r\n\t\thY -= 2 * k\r\n\t}\r\n\tif hZ >= k {\r\n\t\thZ -= 2 * k\r\n\t}\r\n\tklog.V(2).Info(\"---------hX-----------\", hX)\r\n\tklog.V(2).Info(\"---------hY-----------\", hY)\r\n\tklog.V(2).Info(\"---------hZ-----------\", hZ)\r\n\t// angular\r\n\tss19 := splitS2[18]\r\n\tss20 := splitS2[19]\r\n\tss21 := splitS2[20]\r\n\tss22 := splitS2[21]\r\n\tss23 := splitS2[22]\r\n\tss24 := splitS2[23]\r\n\trollH, _ := strconv.Atoi(ss19)\r\n\trollL, _ := strconv.Atoi(ss20)\r\n\tpitchH, _ := strconv.Atoi(ss21)\r\n\tpitchL, _ := strconv.Atoi(ss22)\r\n\tyawH, _ := strconv.Atoi(ss23)\r\n\tYawL, _ := strconv.Atoi(ss24)\r\n\tk = 180.0\r\n\troll := float64(rollH<<8|rollL) / 32768.0 * k\r\n\tpitch := float64(pitchH<<8|pitchL) / 32768.0 * k\r\n\tyaw := float64(yawH<<8|YawL) / 32768.0 * k\r\n\tif roll >= k {\r\n\t\troll -= 2 * k\r\n\t}\r\n\tif pitch >= k {\r\n\t\tpitch -= 2 * k\r\n\t}\r\n\tif yaw >= k {\r\n\t\tyaw -= 2 * k\r\n\t}\r\n\tklog.V(2).Info(\"---------roll-----------\", roll)\r\n\tklog.V(2).Info(\"---------pitch-----------\", pitch)\r\n\tklog.V(2).Info(\"---------yaw-----------\", yaw)\r\n\r\n\t//element\r\n\tss25 := splitS2[len(splitS2)-8]\r\n\tss26 := splitS2[len(splitS2)-7]\r\n\tss27 := splitS2[len(splitS2)-6]\r\n\tss28 := splitS2[len(splitS2)-5]\r\n\tss29 := splitS2[len(splitS2)-4]\r\n\tss30 := splitS2[len(splitS2)-3]\r\n\tss31 := splitS2[len(splitS2)-2]\r\n\tss32 := splitS2[len(splitS2)-1]\r\n\tq0H, _ := strconv.Atoi(ss25)\r\n\tq0L, _ := strconv.Atoi(ss26)\r\n\tq1H, _ := strconv.Atoi(ss27)\r\n\tq1L, _ := strconv.Atoi(ss28)\r\n\tq2H, _ := strconv.Atoi(ss29)\r\n\tq2L, _ := strconv.Atoi(ss30)\r\n\tq3H, _ := strconv.Atoi(ss31)\r\n\tq3L, _ := strconv.Atoi(ss32)\r\n\tk = 1.0\r\n\tq0 := float64(q0H<<8|q0L) / 32768.0\r\n\tq1 := float64(q1H<<8|q1L) / 32768.0\r\n\tq2 := float64(q2H<<8|q2L) / 32768.0\r\n\tq3 := float64(q3H<<8|q3L) / 32768.0\r\n\tif q0 >= k {\r\n\t\tq0 -= 2 * k\r\n\t}\r\n\tif q1 >= k {\r\n\t\tq1 -= 2 * k\r\n\t}\r\n\tif q2 >= k {\r\n\t\tq2 -= 2 * k\r\n\t}\r\n\tif q3 >= k {\r\n\t\tq3 -= 2 * k\r\n\t}\r\n\tklog.V(2).Info(\"---------q0-----------\", q0)\r\n\tklog.V(2).Info(\"---------q1-----------\", q1)\r\n\tklog.V(2).Info(\"---------q2-----------\", q2)\r\n\tklog.V(2).Info(\"---------q3-----------\", q3)\r\n\tglobals.FBClient.Publish(td.DeviceInstanceName, fmt.Sprintf(`{\"node\":\"%s\",\"__name__\":\"%s\",\"accX\":%f,\"accY\":%f,\"accZ\":%f,\"wX\":%f,\"wY\":%f,\"wZ\":%f,\"Hx\":%f,\"Hy\":%f,\"Hz\":%f,\"Roll\":%f,\"Pitch\":%f,\"Yaw\":%f,\"Q0\":%f,\"Q1\":%f,\"Q2\":%f,\"Q3\":%f,\"state\":\"%s\",\"device\":\"imu\",\"topicKey\":\"%s\"}`, nodeName, td.DeviceInstanceName, accX, accY, accZ, wX, wY, wZ, hX, hY, hZ, roll, pitch, yaw, q0, q1, q2, q3, td.Client.GetStatus(), globals.TopicKey))\r\n\t// construct payload\r\n\tvar payload []byte\r\n\tif strings.Contains(td.Topic, \"$hw\") {\r\n\t\tif payload, err = common.CreateMessageTwinUpdate(td.Name, td.Type, strconv.Itoa(int(td.Results[0]))); err != nil {\r\n\t\t\tklog.Error(\"Create message twin update failed\")\r\n\t\t\treturn err\r\n\t\t}\r\n\t} else {\r\n\t\tif payload, err = common.CreateMessageData(td.Name, td.Type, strconv.Itoa(int(td.Results[0]))); err != nil {\r\n\t\t\tklog.Error(\"Create message data failed\")\r\n\t\t\treturn err\r\n\t\t}\r\n\t}\r\n\tif err = globals.MqttClient.Publish(td.Topic, payload); err != nil {\r\n\t\tklog.Error(err)\r\n\t}\r\n\r\n\tklog.V(2).Infof(\"Update value: %s, topic: %s\", strconv.Itoa(int(td.Results[0])), td.Topic)\r\n\treturn err\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pkg/modbus/device/twindata.go	(revision 3ce8b648349f2f4f0c4d74cabf91d014cc88bcbd)
+++ pkg/modbus/device/twindata.go	(date 1620874884443)
@@ -18,6 +18,7 @@
 
 import (
 	"fmt"
+	"math"
 	"strconv"
 	"strings"
 
@@ -54,175 +55,75 @@
 				break
 			}
 			if i == 9 {
-				return fmt.Errorf("IMU设备不可用")
+				klog.V(2).Infof("设备%v不可用", td.DeviceInstanceName)
+				return fmt.Errorf("设备不可用")
 			}
 		}
 	}
 	s1 := strings.Replace(fmt.Sprintf("%v", td.Results), "[", "", -1)
 	s2 := strings.Replace(s1, "]", "", -1)
-	splitS2 := strings.Split(s2, "")
+	splitS2 := strings.Split(s2, " ")
 	var nodeName string
 	if len(strings.Split(td.DeviceInstanceName, "-")) == 3 && strings.Split(td.DeviceInstanceName, "-")[2] != "" {
 		nodeName = strings.Split(td.DeviceInstanceName, "-")[2]
 	}
-	// acceleration
-	ss1 := splitS2[0]
-	ss2 := splitS2[1]
-	ss3 := splitS2[2]
-	ss4 := splitS2[3]
-	ss5 := splitS2[4]
-	ss6 := splitS2[5]
-	axh, _ := strconv.Atoi(ss1)
-	axl, _ := strconv.Atoi(ss2)
-	ayh, _ := strconv.Atoi(ss3)
-	ayl, _ := strconv.Atoi(ss4)
-	azh, _ := strconv.Atoi(ss5)
-	azl, _ := strconv.Atoi(ss6)
-	k := 16.0
-	accX := float64(axh<<8|axl) / 32768.0 * k
-	accY := float64(ayh<<8|ayl) / 32768.0 * k
-	accZ := float64(azh<<8|azl) / 32768.0 * k
-	if accX >= k {
-		accX -= 2 * k
-	}
-	if accY >= k {
-		accY -= 2 * k
-	}
-	if accZ >= k {
-		accZ -= 2 * k
-	}
-	klog.V(2).Info("---------accX-----------", accX)
-	klog.V(2).Info("---------accY-----------", accY)
-	klog.V(2).Info("---------accZ-----------", accZ)
-	// angularVelocity
-
-	ss7 := splitS2[6]
-	ss8 := splitS2[7]
-	ss9 := splitS2[8]
-	ss10 := splitS2[9]
-	ss11 := splitS2[10]
-	ss12 := splitS2[11]
-	wxh, _ := strconv.Atoi(ss7)
-	wxl, _ := strconv.Atoi(ss8)
-	wyh, _ := strconv.Atoi(ss9)
-	wyl, _ := strconv.Atoi(ss10)
-	wzh, _ := strconv.Atoi(ss11)
-	wzl, _ := strconv.Atoi(ss12)
-	k = 2000.0
-	wX := float64(wxh<<8|wxl) / 32768.0 * k
-	wY := float64(wyh<<8|wyl) / 32768.0 * k
-	wZ := float64(wzh<<8|wzl) / 32768.0 * k
-	if wX >= k {
-		wX -= 2 * k
-	}
-	if wY >= k {
-		wY -= 2 * k
-	}
-	if wZ >= k {
-		wZ -= 2 * k
-	}
-	klog.V(2).Info("---------wX-----------", wX)
-	klog.V(2).Info("---------wY-----------", wY)
-	klog.V(2).Info("---------wZ-----------", wZ)
-	// magnetic
-	ss13 := splitS2[12]
-	ss14 := splitS2[13]
-	ss15 := splitS2[14]
-	ss16 := splitS2[15]
-	ss17 := splitS2[16]
-	ss18 := splitS2[17]
-	hxH, _ := strconv.Atoi(ss13)
-	hxL, _ := strconv.Atoi(ss14)
-	hyH, _ := strconv.Atoi(ss15)
-	hyL, _ := strconv.Atoi(ss16)
-	hzH, _ := strconv.Atoi(ss17)
-	hzL, _ := strconv.Atoi(ss18)
-	k = 1.0
-	hX := float64(hxH<<8 | hxL)
-	hY := float64(hyH<<8 | hyL)
-	hZ := float64(hzH<<8 | hzL)
-	if hX >= k {
-		hX -= 2 * k
-	}
-	if hY >= k {
-		hY -= 2 * k
-	}
-	if hZ >= k {
-		hZ -= 2 * k
-	}
-	klog.V(2).Info("---------hX-----------", hX)
-	klog.V(2).Info("---------hY-----------", hY)
-	klog.V(2).Info("---------hZ-----------", hZ)
-	// angular
-	ss19 := splitS2[18]
-	ss20 := splitS2[19]
-	ss21 := splitS2[20]
-	ss22 := splitS2[21]
-	ss23 := splitS2[22]
-	ss24 := splitS2[23]
-	rollH, _ := strconv.Atoi(ss19)
-	rollL, _ := strconv.Atoi(ss20)
-	pitchH, _ := strconv.Atoi(ss21)
-	pitchL, _ := strconv.Atoi(ss22)
-	yawH, _ := strconv.Atoi(ss23)
-	YawL, _ := strconv.Atoi(ss24)
-	k = 180.0
-	roll := float64(rollH<<8|rollL) / 32768.0 * k
-	pitch := float64(pitchH<<8|pitchL) / 32768.0 * k
-	yaw := float64(yawH<<8|YawL) / 32768.0 * k
-	if roll >= k {
-		roll -= 2 * k
-	}
-	if pitch >= k {
-		pitch -= 2 * k
-	}
-	if yaw >= k {
-		yaw -= 2 * k
-	}
-	klog.V(2).Info("---------roll-----------", roll)
-	klog.V(2).Info("---------pitch-----------", pitch)
-	klog.V(2).Info("---------yaw-----------", yaw)
+	if strings.Contains(td.Name, "shutter1") {
+		var lux, co2, pressure, temperature, humidity float64
+		// 湿度
+		ss1 := splitS2[0]
+		ss2 := splitS2[1]
+		humidity = Hex2Dec(ss1, ss2) / 10
+		// 温度
+		ss3 := splitS2[2]
+		ss4 := splitS2[3]
+		temperature = Hex2Dec(ss3, ss4) / 10
+		// 光强
+		ss5 := splitS2[4]
+		ss6 := splitS2[5]
+		ss7 := splitS2[6]
+		ss8 := splitS2[7]
+		lux = Hex2Dec(ss5, ss6, ss7, ss8)
+		// CO2
+		ss11 := splitS2[14]
+		ss12 := splitS2[15]
+		co2 = Hex2Dec(ss11, ss12)
+		// 大气压强
+		ss13 := splitS2[22]
+		ss14 := splitS2[23]
+		pressure = Hex2Dec(ss13, ss14) / 10
+		klog.V(2).Info("---------湿度-----------", humidity)
+		klog.V(2).Info("---------温度-----------", temperature)
+		klog.V(2).Info("---------光强-----------", lux)
+		klog.V(2).Info("---------二氧化碳浓度-----------", co2)
+		klog.V(2).Info("---------大气压强-----------", pressure)
+		globals.FBClient.Publish(td.DeviceInstanceName, fmt.Sprintf(`{"node":"%s", "__name__":"%s", "humidity":%f, "temperature":%f, "lux":%f, "co2":%f, "pressure":%f, "state":"%s"}`, nodeName, td.DeviceModel, humidity, temperature, lux, co2, pressure, td.Client.GetStatus()))
+	} else if strings.Contains(td.Name, "shutter2") {
+		var pm2point5, pm10, noise float64
+		// 噪音
+		ss9 := splitS2[8]
+		ss10 := splitS2[9]
+		noise = Hex2Dec(ss9, ss10) / 10
+		// PM2.5
+		ss15 := splitS2[40]
+		ss16 := splitS2[41]
+		pm2point5 = Hex2Dec(ss15, ss16)
+		// PM 10
+		ss17 := splitS2[42]
+		ss18 := splitS2[43]
+		pm10 = Hex2Dec(ss17, ss18)
+		klog.V(2).Info("---------噪音-----------", noise)
+		klog.V(2).Info("---------PM2.5-----------", pm2point5)
+		klog.V(2).Info("---------PM10-----------", pm10)
+		globals.FBClient.Publish(td.DeviceInstanceName, fmt.Sprintf(`{"node":"%s", "__name__":"%s", "nosie":%f, "pm2.5":%f, "pm10":%f, "state":"%s"}`, nodeName, td.DeviceModel, noise, pm2point5, pm10, td.Client.GetStatus()))
+	} else if strings.Contains(td.Name, "snow") {
+		var snow float64
+		ss1 := strings.Split(s2, " ")[0]
+		ss2 := strings.Split(s2, " ")[1]
+		snow = Hex2Dec(ss1, ss2)
+		klog.V(2).Info("----------雨雪--------------", snow)
+		globals.FBClient.Publish(td.DeviceInstanceName, fmt.Sprintf(`{"__name__":"%s","snow":%f,"node":"%s","state":"%s"}`, td.DeviceModel, snow, nodeName, td.Client.GetStatus()))
 
-	//element
-	ss25 := splitS2[len(splitS2)-8]
-	ss26 := splitS2[len(splitS2)-7]
-	ss27 := splitS2[len(splitS2)-6]
-	ss28 := splitS2[len(splitS2)-5]
-	ss29 := splitS2[len(splitS2)-4]
-	ss30 := splitS2[len(splitS2)-3]
-	ss31 := splitS2[len(splitS2)-2]
-	ss32 := splitS2[len(splitS2)-1]
-	q0H, _ := strconv.Atoi(ss25)
-	q0L, _ := strconv.Atoi(ss26)
-	q1H, _ := strconv.Atoi(ss27)
-	q1L, _ := strconv.Atoi(ss28)
-	q2H, _ := strconv.Atoi(ss29)
-	q2L, _ := strconv.Atoi(ss30)
-	q3H, _ := strconv.Atoi(ss31)
-	q3L, _ := strconv.Atoi(ss32)
-	k = 1.0
-	q0 := float64(q0H<<8|q0L) / 32768.0
-	q1 := float64(q1H<<8|q1L) / 32768.0
-	q2 := float64(q2H<<8|q2L) / 32768.0
-	q3 := float64(q3H<<8|q3L) / 32768.0
-	if q0 >= k {
-		q0 -= 2 * k
-	}
-	if q1 >= k {
-		q1 -= 2 * k
 	}
-	if q2 >= k {
-		q2 -= 2 * k
-	}
-	if q3 >= k {
-		q3 -= 2 * k
-	}
-	klog.V(2).Info("---------q0-----------", q0)
-	klog.V(2).Info("---------q1-----------", q1)
-	klog.V(2).Info("---------q2-----------", q2)
-	klog.V(2).Info("---------q3-----------", q3)
-	globals.FBClient.Publish(td.DeviceInstanceName, fmt.Sprintf(`{"node":"%s","__name__":"%s","accX":%f,"accY":%f,"accZ":%f,"wX":%f,"wY":%f,"wZ":%f,"Hx":%f,"Hy":%f,"Hz":%f,"Roll":%f,"Pitch":%f,"Yaw":%f,"Q0":%f,"Q1":%f,"Q2":%f,"Q3":%f,"state":"%s","device":"imu","topicKey":"%s"}`, nodeName, td.DeviceInstanceName, accX, accY, accZ, wX, wY, wZ, hX, hY, hZ, roll, pitch, yaw, q0, q1, q2, q3, td.Client.GetStatus(), globals.TopicKey))
-	// construct payload
 	var payload []byte
 	if strings.Contains(td.Topic, "$hw") {
 		if payload, err = common.CreateMessageTwinUpdate(td.Name, td.Type, strconv.Itoa(int(td.Results[0]))); err != nil {
@@ -242,3 +143,12 @@
 	klog.V(2).Infof("Update value: %s, topic: %s", strconv.Itoa(int(td.Results[0])), td.Topic)
 	return err
 }
+
+func Hex2Dec(vals ...string) float64 {
+	var result float64
+	for index, val := range vals {
+		floatVal, _ := strconv.ParseFloat(val, 64)
+		result += math.Pow(256, float64(len(vals)-index)-1) * floatVal
+	}
+	return result
+}
Index: pkg/modbus/Makefile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>SHELL = /bin/bash\r\n\r\nbuild:\r\n\t@GOOS=linux CGO_ENABLED=0 GOARCH=arm64 go build -o modbus-go\r\n\t@docker build -t gopherlv/ke-modbus-mapper .\r\n\t@rm modbus-go\r\n\r\npush: build\r\n\t@$(eval REV := $(shell git rev-parse HEAD|cut -c 1-8))\r\n\t@docker tag gopherlv/ke-modbus-mapper gopherlv/ke-modbus-mapper-imu-arm64:$(REV)\r\n\t@docker push gopherlv/ke-modbus-mapper-imu-arm64:$(REV)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pkg/modbus/Makefile	(revision 3ce8b648349f2f4f0c4d74cabf91d014cc88bcbd)
+++ pkg/modbus/Makefile	(date 1620874884482)
@@ -1,7 +1,7 @@
 SHELL = /bin/bash
 
 build:
-	@GOOS=linux CGO_ENABLED=0 GOARCH=arm64 go build -o modbus-go
+	@GOOS=linux  GOARCH=arm64 go build -o modbus-go
 	@docker build -t gopherlv/ke-modbus-mapper .
 	@rm modbus-go
 
